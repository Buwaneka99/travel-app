{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vidur\\\\Desktop\\\\travel-app\\\\frontend\\\\src\\\\com\\\\ProtectedRoute.js\";\n// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  element\n}) {\n  const token = localStorage.getItem('token');\n\n  // If the token is not present, redirect to the login page\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/LoginPage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the token is present, render the desired component\n  return element;\n}\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","element","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vidur/Desktop/travel-app/frontend/src/com/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ element }) {\r\n  const token = localStorage.getItem('token');\r\n\r\n  // If the token is not present, redirect to the login page\r\n  if (!token) {\r\n    return <Navigate to=\"/LoginPage\" />;\r\n  }\r\n\r\n  // If the token is present, render the desired component\r\n  return element;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;;EAEA;EACA,OAAOR,OAAO;AAChB;AAACS,EAAA,GAVQV,cAAc;AAYvB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}